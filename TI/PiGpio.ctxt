#BlueJ class context
comment0.params=
comment0.target=void\ run()
comment1.params=
comment1.target=void\ initialize()
comment10.params=pin\ range
comment10.target=int\ pwmSetRange(int,\ int)
comment11.params=pin
comment11.target=int\ pwmGetRange(int)
comment12.params=pin
comment12.target=int\ pwmGetRealRange(int)
comment13.params=pin\ freq
comment13.target=int\ pwmSetFreq(int,\ int)
comment14.params=pin
comment14.target=int\ pwmGetFreq(int)
comment15.params=pin\ pulseWidth
comment15.target=int\ servo(int,\ int)
comment16.params=seconds\ micros
comment16.target=int\ delay(int,\ int)
comment17.params=pin\ level\ timeout
comment17.target=int\ pulseIn(int,\ boolean,\ int)
comment18.params=i2cBus\ i2cAddr\ i2cFlags
comment18.target=int\ i2cOpen(int,\ int,\ int)
comment19.params=handle
comment19.target=int\ i2cClose(int)
comment2.params=
comment2.target=void\ terminate()
comment20.params=handle\ bit
comment20.target=int\ i2cWriteQuick(int,\ int)
comment21.params=handle\ bVal
comment21.target=int\ i2cWriteByte(int,\ int)
comment22.params=handle
comment22.target=int\ i2cReadByte(int)
comment23.params=handle\ i2cReg\ bVal
comment23.target=int\ i2cWriteByteData(int,\ int,\ int)
comment24.params=handle\ i2cReg\ wVal
comment24.target=int\ i2cWriteWordData(int,\ int,\ int)
comment25.params=handle\ i2cReg
comment25.target=int\ i2cReadByteData(int,\ int)
comment26.params=handle\ i2cReg
comment26.target=int\ i2cReadWordData(int,\ int)
comment27.params=handle\ i2cReg\ wVal
comment27.target=int\ i2cProcessCall(int,\ int,\ int)
comment28.params=handle\ i2cReg\ buf
comment28.target=int\ i2cWriteBlockData(int,\ int,\ byte[])
comment29.params=handle\ i2cReg\ buf
comment29.target=int\ i2cReadBlockData(int,\ int,\ byte[])
comment3.params=pin\ mode
comment3.target=int\ setMode(int,\ int)
comment30.params=handle\ i2cReg\ buf
comment30.target=int\ i2cBlockProcessCall(int,\ int,\ byte[])
comment31.params=handle\ i2cReg\ buf
comment31.target=int\ i2cWriteI2CBlockData(int,\ int,\ byte[])
comment32.params=handle\ i2cReg\ buf
comment32.target=int\ i2cReadI2CBlockData(int,\ int,\ byte[])
comment33.params=handle\ buf
comment33.target=int\ i2cReadDevice(int,\ byte[])
comment34.params=handle\ buf
comment34.target=int\ i2cWriteDevice(int,\ byte[])
comment35.params=spiChan\ boud\ spiFlags
comment35.target=int\ spiOpen(int,\ int,\ int)
comment36.params=handle
comment36.target=int\ spiClose(int)
comment37.params=handle\ buf
comment37.target=int\ spiRead(int,\ byte[])
comment38.params=handle\ buf
comment38.target=int\ spiWrite(int,\ byte[])
comment39.params=handle\ txBuf\ rxBuf
comment39.target=int\ spiXfer(int,\ byte[],\ byte[])
comment4.params=pin
comment4.target=int\ getMode(int)
comment40.params=sertty\ baud\ serFlags
comment40.target=int\ serOpen(java.lang.String,\ int,\ int)
comment41.params=handle
comment41.target=int\ serClose(int)
comment42.params=handle\ data
comment42.target=int\ serWriteByte(int,\ int)
comment43.params=handle
comment43.target=int\ serReadByte(int)
comment44.params=handle\ buf
comment44.target=int\ serWrite(int,\ byte[])
comment45.params=handle\ buf
comment45.target=int\ serRead(int,\ byte[])
comment46.params=handle
comment46.target=int\ serDataAvailable(int)
comment47.params=pin\ freq\ len
comment47.target=int\ freqOut(int,\ float,\ int)
comment48.params=pin
comment48.target=int\ analogRead(int)
comment49.params=b
comment49.target=void\ sendTiny(int)
comment5.params=pin\ pud
comment5.target=int\ setPullUpDown(int,\ int)
comment6.params=pin
comment6.target=int\ read(int)
comment7.params=pin\ level
comment7.target=int\ write(int,\ boolean)
comment8.params=pin\ dutycycle
comment8.target=int\ pwm(int,\ int)
comment9.params=pin
comment9.target=int\ pwmGetDutyCycle(int)
numComments=50
