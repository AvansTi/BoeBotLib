#BlueJ class context
comment0.params=pin\ value
comment0.target=void\ digitalWrite(int,\ boolean)
comment0.text=\r\n\ Will\ put\ a\ pin\ in\ output\ mode,\ and\ set\ the\ state\ high\ if\ value\ is\ true,\ and\ low\ if\ value\ is\ false\r\n\ If\ this\ pin\ is\ in\ input\ mode,\ will\ switch\ to\ output\ mode\r\n\ @param\ pin\ the\ BoeBot\ pin\ number\r\n\ @param\ value\ the\ value\ to\ write\ to\ this\ pin.\ true\ will\ set\ the\ pin\ high,\ low\ will\ set\ the\ pin\ low\r\n
comment1.params=pin
comment1.target=boolean\ digitalRead(int)
comment1.text=\r\n\ Read\ the\ state\ of\ a\ pin.\ If\ the\ pin\ is\ high,\ will\ return\ true,\ otherwise\ will\ return\ false\r\n\ @param\ pin\ the\ BoeBot\ pin\ number\r\n\ @return\ the\ state\ of\ the\ pin,\ true\ for\ high,\ false\ for\ low\r\n
comment10.params=
comment10.target=void\ rgbShow()
comment10.text=\r\n\ Shows\ the\ colors\ set\ to\ the\ NeoPixels\ on\ the\ board\r\n
comment11.params=led\ r\ g\ b
comment11.target=void\ rgbSet(int,\ int,\ int,\ int)
comment11.text=\r\n\ Sets\ the\ colors\ of\ a\ NeoPixel,\ but\ does\ not\ show\ this\ color.\ After\ calling\ this\ method\ for\ the\ LEDs\ you\ want\ to\ change\ color,\ call\ the\ BoeBot.show()\ method\r\n\ @param\ led\ the\ LED\ you\ want\ to\ change\ (0-5)\r\n\ @param\ r\ the\ value\ for\ red\ (0-255),\ 0\ is\ off,\ 255\ is\ completely\ on\r\n\ @param\ g\ the\ value\ for\ green\ (0-255),\ 0\ is\ off,\ 255\ is\ completely\ on\r\n\ @param\ b\ the\ value\ for\ blue\ (0-255),\ 0\ is\ off,\ 255\ is\ completely\ on\r\n
comment12.params=led\ color
comment12.target=void\ rgbSet(int,\ java.awt.Color)
comment12.text=\r\n\ Sets\ the\ colors\ of\ a\ NeoPixel,\ but\ does\ not\ show\ this\ color.\ After\ calling\ this\ method\ for\ the\ LEDs\ you\ want\ to\ change\ color,\ call\ the\ BoeBot.show()\ method\r\n\ @param\ led\ the\ LED\ you\ want\ to\ change\ (0-5)\r\n\ @param\ color\ the\ color\ of\ the\ LED\r\n
comment13.params=enabled
comment13.target=void\ setStatusLed(boolean)
comment13.text=\r\n\ Turns\ the\ tiny\ status\ LED\ on\ or\ off\r\n\ @param\ enabled\ true\ to\ turn\ the\ LED\ on,\ false\ to\ turn\ the\ LED\ off\r\n
comment2.params=delay
comment2.target=void\ wait(int)
comment2.text=\r\n\ Waits\ for\ a\ specific\ time\r\n\ Warning\:\ this\ delay\ is\ not\ very\ accurate\r\n\ @param\ delay\ the\ time\ in\ milliseconds\r\n
comment3.params=seconds\ micros
comment3.target=void\ wait(int,\ int)
comment3.text=\r\n\ Waits\ for\ a\ specific\ time\r\n\ @param\ seconds\ the\ number\ of\ seconds\r\n\ Warning\:\ if\ the\ delay\ is\ too\ short,\ will\ use\ busy\ waiting\r\n\ @param\ micros\ the\ number\ of\ microseconds\r\n
comment4.params=micros
comment4.target=void\ uwait(int)
comment4.text=\r\n\ Waits\ for\ a\ specific\ time\r\n\ Warning\:\ if\ the\ delay\ is\ too\ short,\ will\ use\ busy\ waiting\r\n\ @param\ micros\ the\ number\ of\ microseconds\r\n
comment5.params=pin\ value\ timeout
comment5.target=int\ pulseIn(int,\ boolean,\ int)
comment5.text=\r\n\ Waits\ for\ a\ pulse\ on\ a\ pin\r\n\ @param\ pin\ the\ BoeBot\ pin\ number\r\n\ @param\ value\ the\ state\ to\ wait\ for.\ true\ to\ wait\ for\ a\ high\ pulse,\ false\ to\ wait\ for\ a\ low\ pulse\r\n\ @param\ timeout\ the\ timeout\ to\ wait\ for,\ in\ microseconds\r\n\ @return\ Returns\ the\ length\ of\ the\ measured\ pulse,\ -1\ if\ there\ was\ a\ timeout,\ and\ 0\ if\ there\ was\ a\ timeout\ during\ the\ pulse\r\n
comment6.params=slot\ value
comment6.target=void\ dataStore(int,\ int)
comment6.text=\r\n\ Stores\ data\ on\ the\ internal\ memory\ of\ the\ Raspberry\ Pi\r\n\ @param\ slot\ the\ dataslot\ to\ store\ information\ on\r\n\ @param\ value\ the\ value\ to\ store\r\n
comment7.params=slot
comment7.target=int\ dataRead(int)
comment7.text=\r\n\ Reads\ data\ from\ the\ internal\ memory\ of\ the\ Raspberry\ Pi\r\n\ @param\ slot\ the\ dataslot\ to\ store\ information\ on\r\n\ @return\ the\ information\ in\ memory\r\n
comment8.params=pin\ frequency\ time
comment8.target=void\ freqOut(int,\ int,\ int)
comment8.text=\r\n\ Writes\ a\ frequency\ to\ a\ pin,\ for\ a\ certain\ amount\ of\ time\r\n\ @param\ pin\ the\ BoeBot\ pin\ number\r\n\ @param\ frequency\ the\ frequency\ to\ write,\ in\ Hz\r\n\ @param\ time\ the\ amount\ of\ time\ to\ write,\ in\ milliseconds\r\n
comment9.params=pin
comment9.target=int\ analogRead(int)
comment9.text=\r\n\ Reads\ an\ analog\ value\ from\ the\ 12bit\ ADC.\ This\ method\ uses\ single-shot\ mode,\ and\ opens\ the\ SPI\ bus\ every\ time\ it\ is\ called.\r\n\ @param\ pin\ the\ ADC\ pin\r\n\ @return\ the\ value\ returned\ from\ the\ ADC\ (0-4096)\r\n
numComments=14
