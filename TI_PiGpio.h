/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class TI_PiGpio */

#ifndef _Included_TI_PiGpio
#define _Included_TI_PiGpio
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     TI_PiGpio
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_TI_PiGpio_initialize
  (JNIEnv *, jclass);

/*
 * Class:     TI_PiGpio
 * Method:    terminate
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_TI_PiGpio_terminate
  (JNIEnv *, jclass);

/*
 * Class:     TI_PiGpio
 * Method:    setMode
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_setMode
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    getMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_getMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    setPullUpDown
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_setPullUpDown
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    read
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_read
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    write
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_write
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     TI_PiGpio
 * Method:    pwm
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwm
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pwmGetDutyCycle
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwmGetDutyCycle
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pwmSetRange
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwmSetRange
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pwmGetRange
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwmGetRange
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pwmGetRealRange
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwmGetRealRange
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pwmSetFreq
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwmSetFreq
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pwmGetFreq
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pwmGetFreq
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    servo
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_servo
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    delay
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_delay
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    pulseIn
 * Signature: (IZI)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_pulseIn
  (JNIEnv *, jclass, jint, jboolean, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cOpen
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cOpen
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cClose
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteQuick
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteQuick
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteByte
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteByte
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cReadByte
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cReadByte
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteByteData
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteByteData
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteWordData
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteWordData
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cReadByteData
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cReadByteData
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cReadWordData
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cReadWordData
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cProcessCall
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cProcessCall
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteBlockData
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteBlockData
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    i2cReadBlockData
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cReadBlockData
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    i2cBlockProcessCall
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cBlockProcessCall
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteI2CBlockData
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteI2CBlockData
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    i2cReadI2CBlockData
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cReadI2CBlockData
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    i2cReadDevice
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cReadDevice
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    i2cWriteDevice
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_i2cWriteDevice
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    spiOpen
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_spiOpen
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    spiClose
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_spiClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    spiRead
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_spiRead
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    spiWrite
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_spiWrite
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    spiXfer
 * Signature: (I[B[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_spiXfer
  (JNIEnv *, jclass, jint, jbyteArray, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    serOpen
 * Signature: (Ljava/lang/String;II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serOpen
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    serClose
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    serWriteByte
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serWriteByte
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     TI_PiGpio
 * Method:    serReadByte
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serReadByte
  (JNIEnv *, jclass, jint);

/*
 * Class:     TI_PiGpio
 * Method:    serWrite
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serWrite
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    serRead
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serRead
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     TI_PiGpio
 * Method:    serDataAvailable
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_TI_PiGpio_serDataAvailable
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
